// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  username     String   @unique
  passwordHash String
  role         UserRole @default(USER)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  Answer       Answer[]
}

model Questionnaire {
  id                    Int                     @id @default(autoincrement())
  title                 String
  QuestionnaireQuestion QuestionnaireQuestion[]
}

model Question {
  id                    Int                     @id @default(autoincrement())
  questionText          String                  @unique
  type                  QuestionType
  options               String[]
  QuestionnaireQuestion QuestionnaireQuestion[]
}

model QuestionnaireQuestion {
  questionnaire   Questionnaire @relation(fields: [questionnaireId], references: [id])
  question        Question      @relation(fields: [questionId], references: [id])
  priority        Int
  questionnaireId Int
  questionId      Int
  Answer          Answer[]

  @@id([questionnaireId, questionId])
}

model Answer {
  id                    Int                    @id @default(autoincrement())
  user                  User                   @relation(fields: [userId], references: [id])
  QuestionnaireQuestion QuestionnaireQuestion? @relation(fields: [questionnaireId, questionId], references: [questionnaireId, questionId])
  aswerText             String
  userId                Int
  questionnaireId       Int?
  questionId            Int?
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt

  @@unique([userId, questionnaireId, questionId])
}

enum QuestionType {
  MCQ
  INPUT
}

enum UserRole {
  ADMIN
  USER
}
